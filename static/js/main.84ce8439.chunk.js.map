{"version":3,"sources":["App.js","theme.js","Home.js","Tutorial.js","Credits.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","COLOR_1","GameContainer","_templateObject2","App","_useState","useState","_useState2","Object","_Users_blutarche_Projects_ggj_2019_web_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","showGame","setShowGame","_useState3","_useState4","showTutorial","setShowTutorial","play","global","UnityLoader","instantiate","onProgress","UnityProgress","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","hidden","id","_Tutorial__WEBPACK_IMPORTED_MODULE_8__","onBack","onPlay","_Home__WEBPACK_IMPORTED_MODULE_7__","onTutorial","_Credits__WEBPACK_IMPORTED_MODULE_9__","__webpack_require__","d","__webpack_exports__","Title","TeamName","_templateObject3","Button","_templateObject4","Home","_ref","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","css","_templateObject5","onClick","_templateObject6","Content","Back","Step","Row","Label","_templateObject7","Description","_templateObject8","Play","_templateObject9","Navigator","_templateObject10","Previous","_templateObject11","Next","_templateObject12","Tutorial","step","setStep","src","alt","Names","span","Credits","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84ce8439.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\n\nimport { COLOR_1 } from 'theme'\n\nimport './App.css'\nimport Home from './Home'\nimport Tutorial from './Tutorial'\nimport Credits from './Credits'\n\nconst Container = styled.div`\n  font-family: 'Amatic SC', cursive;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${COLOR_1};\n`\nconst GameContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n`\n\nconst App = () => {\n  const [showGame, setShowGame] = useState(false)\n  const [showTutorial, setShowTutorial] = useState(false)\n  function play() {\n    setShowGame(true)\n    global.UnityLoader.instantiate(\n      'gameContainer',\n      'game/Build/ggj19-01.json',\n      { onProgress: global.UnityProgress }\n    )\n  }\n  return (\n    <Container>\n      <div hidden={!showGame}>\n        <GameContainer id=\"gameContainer\" />\n      </div>\n      {!showGame &&\n        (showTutorial ? (\n          <Tutorial\n            onBack={() => setShowTutorial(false)}\n            onPlay={() => play()}\n          />\n        ) : (\n          <Home\n            onPlay={() => play()}\n            onTutorial={() => setShowTutorial(true)}\n          />\n        ))}\n      {!showGame && <Credits />}\n    </Container>\n  )\n}\n\nexport default App\n","export const COLOR_1 = '#FAE4CD'\nexport const COLOR_2 = '#F5C391'\nexport const COLOR_3 = '#EC8CC4'\nexport const COLOR_4 = '#995E9C'\n","/** @jsx jsx */\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nconst Container = styled.div`\n  padding: 2rem;\n`\nconst Title = styled.div`\n  font-size: 3rem;\n  text-align: center;\n`\nconst TeamName = styled.div`\n  font-size: 1.4rem;\n  text-align: center;\n`\nconst Button = styled.div`\n  font-size: 4rem;\n  text-align: center;\n  border: 2px solid #000;\n  border-radius: 6px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  transition: all 0.3s;\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nconst Home = ({ onPlay, onTutorial }) => {\n  return (\n    <Container>\n      <Title>Internet is Home</Title>\n      <TeamName>by Old Man Tea Party</TeamName>\n      <div\n        css={css`\n          margin-top: 16px;\n        `}\n      >\n        <Button onClick={onPlay}>Play</Button>\n        <Button\n          onClick={onTutorial}\n          css={css`\n            font-size: 2rem;\n          `}\n        >\n          How to play\n        </Button>\n      </div>\n    </Container>\n  )\n}\n\nexport default Home\n","/** @jsx jsx */\nimport { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst Content = styled.div`\n  display: inline-flex;\n  // font-family: 'Open Sans Condensed', sans-serif;\n`\nconst Back = styled.div`\n  position: fixed;\n  top: 16px;\n  left: 16px;\n  padding: 16px;\n  font-size: 2rem;\n  cursor: pointer;\n  transition: all 0.3s;\n  &:hover {\n    opacity: 0.5;\n  }\n`\nconst Step = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n`\nconst Title = styled.div`\n  font-size: 3rem;\n  text-align: center;\n  margin-bottom: 16px;\n`\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n  img {\n    margin-right: 8px;\n  }\n`\nconst Label = styled.div`\n  font-size: 1.6rem;\n`\nconst Description = styled.div`\n  font-size: 2rem;\n`\nconst Play = styled.div`\n  width: 200px;\n  height: 200px;\n  border: 2px solid #000;\n  border-radius: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  &:hover {\n    opacity: 0.5;\n  }\n  img {\n    margin-left: 16px;\n  }\n`\n\nconst Navigator = styled.div`\n  padding: 8px 12px;\n  border: 1px #000 solid;\n  border-radius: 4px;\n  font-size: 1.4rem;\n  cursor: pointer;\n  transition: all 0.3s;\n  z-index: 20;\n  &:hover {\n    opacity: 0.5;\n  }\n`\nconst Previous = styled(Navigator)`\n  position: fixed;\n  top: 50%;\n  left: 16px;\n`\nconst Next = styled(Navigator)`\n  position: fixed;\n  top: 50%;\n  right: 16px;\n`\n\nconst Tutorial = ({ onBack, onPlay }) => {\n  const [step, setStep] = useState(1)\n  return (\n    <Container>\n      <Back onClick={onBack}>{'<'} Back</Back>\n      {step > 1 && (\n        <Previous onClick={() => setStep(step - 1)}>\n          {'<'} {step === 2 ? 'Objectives' : step === 3 ? 'Controls' : null}\n        </Previous>\n      )}\n      <Content>\n        {step === 1 ? (\n          <Step>\n            <Title>Objective</Title>\n            <Row>\n              <Description>\n                Defeat the dinosaur and take back the internet!\n              </Description>\n            </Row>\n            <Row>\n              <img\n                src=\"https://img.icons8.com/dusk/64/000000/define-location.png\"\n                alt=\"shoot\"\n              />\n              <Label>Attack the weakpoints! Destroy all of them to win.</Label>\n            </Row>\n          </Step>\n        ) : step === 2 ? (\n          <Step>\n            <Title>Controls</Title>\n            <Row>\n              <img\n                src=\"https://img.icons8.com/dusk/64/000000/circled-left-2.png\"\n                alt=\"left\"\n              />\n              <Label>\n                <b>[Left button]</b> to roll left\n              </Label>\n            </Row>\n            <Row>\n              <img\n                src=\"https://img.icons8.com/dusk/64/000000/circled-right-2.png\"\n                alt=\"right\"\n              />\n              <Label>\n                <b>[Right button]</b> to roll right\n              </Label>\n            </Row>\n            <Row>\n              <img\n                src=\"https://img.icons8.com/dusk/64/000000/double-up.png\"\n                alt=\"jump\"\n              />\n              <Label>\n                <b>[Spacebar]</b> to jump\n              </Label>\n            </Row>\n            <Row>\n              <img\n                src=\"https://img.icons8.com/dusk/64/000000/define-location.png\"\n                alt=\"shoot\"\n              />\n              <Label>Shoots automatically</Label>\n            </Row>\n          </Step>\n        ) : step === 3 ? (\n          <Step>\n            <Play onClick={onPlay}>\n              <img\n                src=\"https://img.icons8.com/wired/64/000000/play.png\"\n                alt=\"play\"\n              />\n            </Play>\n          </Step>\n        ) : null}\n      </Content>\n      {step < 3 && (\n        <Next onClick={() => setStep(step + 1)}>\n          {step === 1 ? 'Controls' : step === 2 ? 'Play' : null} {'>'}\n        </Next>\n      )}\n    </Container>\n  )\n}\n\nexport default Tutorial\n","/** @jsx jsx */\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 16px;\n  right: 16px;\n  display: flex;\n  align-items: baseline;\n  font-weight: bold;\n`\nconst Names = styled.span`\n  font-size: 0.8rem;\n  opacity: 0.7;\n  margin-right: 16px;\n`\n\nconst Credits = () => {\n  return (\n    <Container>\n      <Names>\n        With love. And blood. And tears. by: Champ, Waii, Por, Tas, Aik.\n      </Names>\n      <a\n        href=\"https://github.com/blutarche/ggj-2019-web/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        css={css`\n          margin-right: 16px;\n        `}\n      >\n        Web\n      </a>\n      <a\n        href=\"https://github.com/LNWPOR/GGJ2019\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        css={css`\n          margin-right: 16px;\n        `}\n      >\n        Game Source Code\n      </a>\n    </Container>\n  )\n}\n\nexport default Credits\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}